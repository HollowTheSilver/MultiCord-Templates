{
  "name": "Custom Permissions System",
  "id": "permissions",
  "version": "1.0.0",
  "author": "HollowTheSilver",
  "description": "Enterprise-grade hierarchical permission system with intelligent role detection and Unicode normalization",
  "category": "administration",
  "tags": [
    "permissions",
    "roles",
    "administration",
    "security",
    "auto-configuration",
    "hierarchy",
    "audit-logging"
  ],
  "discord_py_version": ">=2.0.0",
  "python_version": ">=3.9",
  "database_required": false,
  "database_optional": true,
  "features": {
    "permission_hierarchy": {
      "description": "9-level permission hierarchy from BANNED (-1) to BOT_OWNER (200)",
      "levels": [
        "BANNED",
        "EVERYONE",
        "MEMBER",
        "MODERATOR",
        "LEAD_MOD",
        "ADMIN",
        "LEAD_ADMIN",
        "OWNER",
        "BOT_ADMIN",
        "BOT_OWNER"
      ]
    },
    "role_classification": {
      "description": "Intelligent classification of roles into Authority, Bot, Integration, Cosmetic, Functional, and Temporary",
      "types": [
        "AUTHORITY",
        "BOT",
        "INTEGRATION",
        "COSMETIC",
        "FUNCTIONAL",
        "TEMPORARY",
        "UNKNOWN"
      ]
    },
    "unicode_normalization": {
      "description": "Handles fancy Discord text with Unicode normalization",
      "library": "unidecode"
    },
    "auto_configuration": {
      "description": "Automatically detects and configures role permissions based on names and Discord permissions",
      "intelligent": true
    },
    "guild_overrides": {
      "description": "Per-guild permission node overrides for customization",
      "granular": true
    },
    "audit_logging": {
      "description": "Complete audit trail for permission changes",
      "compliance_ready": true
    },
    "decorators": {
      "description": "Easy-to-use decorators for command permission checks",
      "examples": [
        "@require_permission('moderation.kick')",
        "@require_level(PermissionLevel.MODERATOR)",
        "@channel_only(channel_id1, channel_id2)"
      ]
    }
  },
  "permissions": {
    "required": [
      "send_messages",
      "embed_links",
      "read_message_history",
      "manage_roles"
    ],
    "optional": [
      "administrator"
    ]
  },
  "configuration": {
    "use_database": {
      "type": "boolean",
      "default": false,
      "description": "Enable SQLite database persistence (in-memory by default)"
    },
    "db_path": {
      "type": "string",
      "default": null,
      "description": "Path to SQLite database file (uses :memory: if not specified)"
    }
  },
  "commands": {
    "permission_groups": [
      {
        "name": "Auto-Configuration",
        "commands": [
          "/permissions auto-configure",
          "/permissions classify-roles"
        ]
      },
      {
        "name": "Role Management",
        "commands": [
          "/permissions set-role <role> <level>",
          "/permissions remove-role <role>",
          "/permissions list-roles"
        ]
      },
      {
        "name": "Command Permissions",
        "commands": [
          "/permissions set-command <command> <level>",
          "/permissions remove-command <command>",
          "/permissions list-commands"
        ]
      },
      {
        "name": "User Overrides",
        "commands": [
          "/permissions grant-user <user> <permission>",
          "/permissions deny-user <user> <permission>",
          "/permissions remove-user <user> <permission>"
        ]
      },
      {
        "name": "Audit & Info",
        "commands": [
          "/permissions check <user>",
          "/permissions audit",
          "/permissions info"
        ]
      }
    ]
  },
  "installation": {
    "cli_command": "multicord cog add <bot-name> permissions",
    "manual_steps": [
      "Copy the entire 'permissions' directory to your bot's 'cogs/' folder",
      "Install dependencies: pip install -r cogs/permissions/requirements.txt",
      "Load the cog: await bot.load_extension('cogs.permissions')",
      "Configure (optional): Set bot.config['permissions'] = {'use_database': True}"
    ]
  },
  "compatibility": {
    "multicord_version": ">=1.0.0",
    "platforms": [
      "windows",
      "linux",
      "macos"
    ]
  },
  "documentation": {
    "readme": "README.md",
    "examples": "EXAMPLES.md",
    "api_reference": "API.md"
  },
  "license": "MIT",
  "repository": "https://github.com/HollowTheSilver/MultiCord-Templates",
  "issues": "https://github.com/HollowTheSilver/MultiCord-Templates/issues",
  "created_at": "2025-10-03",
  "last_updated": "2025-10-03"
}
